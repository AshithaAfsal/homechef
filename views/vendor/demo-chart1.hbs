<!DOCTYPE html>
<html>

<head>
    <title>ChartJS - BarGraph</title>
    <style type="text/css">
        #chart-container {
            width: 640px;
            height: auto;
        }
    </style>
</head>

<body>
    <div id="chart-container">
        <canvas id="mycanvas"></canvas>
    </div>
<div class="bottommargin mx-auto" style="max-width: 70%; min-height: 350px;">
						<canvas id="chart-0"></canvas>
					</div>
                    <div class="bottommargin mx-auto" style="max-width: 70%; min-height: 350px;">
						<canvas id="chart-1"></canvas>
					</div>
    <!-- javascript -->
    {{!-- <script type="text/javascript" src="https://github.com/yusufshakeel/chartjs/blob/master/php-mysql-chartjs/js/jquery.min.js"></script>
    <script type="text/javascript" src="https://github.com/yusufshakeel/chartjs/blob/master/php-mysql-chartjs/js/Chart.min.js"></script>
    <script type="text/javascript" src="https://github.com/yusufshakeel/chartjs/blob/master/php-mysql-chartjs/js/app.js"></script> --}}

  <script src="https://cdn.jsdelivr.net/npm/chart.js@2.8.0"></script>
{{!-- <script>
   
    $(document).ready(function () {
     
        $.ajax({
            url: "/vendor/demo_chart1",
            method: "GET",
            success: function (data) {
              
                var data = data              
                var product = [];
                var count = [];
              
                for (var i in data) {
                     product.push( data[i].product_name);
                     count.push(data[i].count);
                }
               
                var chartdata = {
                    labels:product ,
                    datasets: [
                        {
                            label: 'product count',
                            backgroundColor: 'rgba(175, 82, 82, 0.85)',
                            borderColor: 'rgba(200, 200, 200, 0.75)',
                            hoverBackgroundColor: 'rgba(200, 200, 200, 1)',
                            hoverBorderColor: 'rgba(200, 200, 200, 1)',
                            data: count
                        }
                        
                    ]
                    
                };

                var ctx = $("#mycanvas");
                var barGraph = new Chart(ctx, {
                    type: 'bar',
                    data: chartdata
                });
                var ctx = $("#chart-0");

                var donutGraph = new Chart(ctx, {
                    type: 'doughnut',
                    data: chartdata
                });
            },
            error: function (data) {
                console.log(data);
            }
       });
    });
</script> --}}

<script>
   
    $(document).ready(function () {
     
        $.ajax({
            url: "/vendor/demo_chart1",
            method: "GET",
            success: function (data) {
              
                var data = data              
                var product = [];
                var count = [];
              
                for (var i in data) {
                     product.push( data[i].product_name);
                     count.push(data[i].count);
                }
               function getRandomColor() {
                        var letters = '0123456789ABCDEF';
                        var color = '#';
                        for (var i = 0; i < 6; i++) {
                            color += letters[Math.floor(Math.random() * 16)];
                        }
                        return color;
                }
                var config = {
			type: 'doughnut',
			data: {
				datasets: [{
					data: count,
					backgroundColor: [
						window.chartColors.red,
						window.chartColors.orange,
						window.chartColors.yellow,
						window.chartColors.green,
						window.chartColors.blue,
					],
					label: 'Dataset 1'
				}],
				labels:product
					
				
			},
			options: {
				responsive: true,
				legend: {
					position: 'top',
				},
				title: {
					display: true,
					text: 'Doughnut Chart'
				},
				animation: {
					animateScale: true,
					animateRotate: true
				}
			}
		};

		
			var ctx = document.getElementById("chart-0").getContext("2d");
			window.myDoughnut = new Chart(ctx, config);
		
                
            },
            error: function (data) {
                console.log(data);
            }
       });
    });
</script>
	<script>

		var randomScalingFactor = function() {
			return Math.round(Math.random() * 100);
		};

		var config = {
			type: 'doughnut',
			data: {
				datasets: [{
					data: [
						randomScalingFactor(),
						randomScalingFactor(),
						randomScalingFactor(),
						randomScalingFactor(),
						randomScalingFactor(),
					],
					backgroundColor: [
						window.chartColors.red,
						window.chartColors.orange,
						window.chartColors.yellow,
						window.chartColors.green,
						window.chartColors.blue,
					],
					label: 'Dataset 1'
				}],
				labels: [
					"Red",
					"Orange",
					"Yellow",
					"Green",
					"Blue"
				]
			},
			options: {
				responsive: true,
				legend: {
					position: 'top',
				},
				title: {
					display: true,
					text: 'Doughnut Chart'
				},
				animation: {
					animateScale: true,
					animateRotate: true
				}
			}
		};

		window.onload = function() {
			var ctx = document.getElementById("chart-1").getContext("2d");
			window.myDoughnut = new Chart(ctx, config);
		};

	/*	document.getElementById('randomizeData').addEventListener('click', function() {
			config.data.datasets.forEach(function(dataset) {
				dataset.data = dataset.data.map(function() {
					return randomScalingFactor();
				});
			});

			window.myDoughnut.update();
		});

		var colorNames = Object.keys(window.chartColors);
		document.getElementById('addDataset').addEventListener('click', function() {
			var newDataset = {
				backgroundColor: [],
				data: [],
				label: 'New dataset ' + config.data.datasets.length,
			};

			for (var index = 0; index < config.data.labels.length; ++index) {
				newDataset.data.push(randomScalingFactor());

				var colorName = colorNames[index % colorNames.length];;
				var newColor = window.chartColors[colorName];
				newDataset.backgroundColor.push(newColor);
			}

			config.data.datasets.push(newDataset);
			window.myDoughnut.update();
		});

		document.getElementById('addData').addEventListener('click', function() {
			if (config.data.datasets.length > 0) {
				config.data.labels.push('data #' + config.data.labels.length);

				var colorName = colorNames[config.data.datasets[0].data.length % colorNames.length];;
				var newColor = window.chartColors[colorName];

				config.data.datasets.forEach(function(dataset) {
					dataset.data.push(randomScalingFactor());
					dataset.backgroundColor.push(newColor);
				});

				window.myDoughnut.update();
			}
		});

		document.getElementById('removeDataset').addEventListener('click', function() {
			config.data.datasets.splice(0, 1);
			window.myDoughnut.update();
		});

		document.getElementById('removeData').addEventListener('click', function() {
			config.data.labels.splice(-1, 1); // remove the label first

			config.data.datasets.forEach(function(dataset) {
				dataset.data.pop();
				dataset.backgroundColor.pop();
			});

			window.myDoughnut.update();
		});*/

	</script> 







</body>
</html>